New opt-in feature to support fractional gates is added to :class:`.IBMBackend`.
IBM backends currently support dynamic circuits and fractional gates exclusively and
the two features cannot be used in the same primitive job.
In addition, some error mitigation protocols you can use with the estimator primitive, 
such as PEC or PEA, may not support gate twirling with the fractional gates.
Since Qiskit Target model doesn't represent such constraint,
we adopted the opt-in approach, where your backend target includes only 
fractional gates (control flow instructions) when the backend is (not) opted.
This feature is controlled when you retrieve the target backend from the :class:`.QiskitRuntimeService`.

.. code-block:: python

    from qiskit_ibm_runtime import QiskitRuntimeService

    backend = QiskitRuntimeService(channel="ibm_quantum").backends(
        "name_of_your_backend", 
        use_fractional_gates=True,
    )[0]

When the fractional feature is enabled, transpiled circuits may have
shorter depth compared with the conventional IBM basis gates, e.g. [sx, rz, ecr].

When you use control flow instructions, e.g. ``if_else``, in your circuit,
you must disable the fractional gate feature to get executable ISA circuits.
The choice of the instruction set is now responsibility of users.

Note that this pattern may be modified or removed without deprecation
when the IBM backends is updated in future development.
